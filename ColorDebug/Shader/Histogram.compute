
#pragma kernel KHistogramClear
#pragma kernel KHistogramGather

#define HISTOGRAM_BINS 256
#define GROUP_SIZE_X 16
#define GROUP_SIZE_Y 16

RWStructuredBuffer<uint> _HistogramBuffer;
Texture2D<float4> _Source;
float4 _Params;

[numthreads(GROUP_SIZE_X, 1, 1)]
void KHistogramClear(uint3 dispatchThreadId : SV_DispatchThreadID)
{
    if (dispatchThreadId.x < HISTOGRAM_BINS)
        _HistogramBuffer[dispatchThreadId.x] = 0u;
}

[numthreads(GROUP_SIZE_X, GROUP_SIZE_Y, 1)]
void KHistogramGather(uint2 dispatchThreadId : SV_DispatchThreadID)
{
    if (dispatchThreadId.x >= (uint) _Params.x || dispatchThreadId.y >= (uint) _Params.y)
        return;

    float3 color = _Source[dispatchThreadId].rgb;
    
    // Use the maximum component (Value) for brightness
    float value = max(color.r, max(color.g, color.b));
    uint idx = (uint)(saturate(value) * 255.0);

    InterlockedAdd(_HistogramBuffer[idx], 1u);
}
